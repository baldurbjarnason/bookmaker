#!/usr/bin/env node

'use strict';


var bookmaker, done, fs, generate, load, loader, sequence, whenjs;

bookmaker = require('./src/index');

fs = require('fs');

whenjs = require('when');

sequence = require('when/sequence');

var os = require('os');
var path = require('path');
var fs = require('fs');

var temppath = path.resolve(os.tmpDir(), 'bm' + require('crypto').randomBytes(4).toString('hex'));
var args = process.argv.splice(2);
var tempdir = fs.mkdirSync(temppath);
var rimraf = require('rimraf');
done = function() {
  console.log('Cleaning up.');
  rimraf(temppath, function(err) {
    if (err) {
      console.error(err);
    }
    console.log('Done');
  });
};

var target = fs.createWriteStream(args[1]);


generate = function(book) {
  book.assets.initSync();
  book.toEpub(target);
};

load = function(book) {
  return generate(book).then(function() {done()});
};


// loader = bookmaker.Book.fromEpub(args[0], temppath);
loader = bookmaker.Book.fromEpub(args[0], 'tempassets/');


loader.then(function(book) {
  return load(book);
});
